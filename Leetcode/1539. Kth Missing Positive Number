Given an array arr of positive integers sorted in a strictly increasing order, and an integer k.

Find the kth positive integer that is missing from this array.

Input: arr = [2,3,4,7,11], k = 5
Output: 9
Explanation: The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5th missing positive integer is 9.

explanation 1 : complexity is O(N)
lets assume kth missing no is k itself , now we traverse array from left to right , if arr[i] <=k ( which means that no is present in [1....k] , increment k )
so in the end ( when condn breaks or end of traversal , we get kth value )

class Solution {
    public int findKthPositive(int[] arr, int k) {
        for(int i : arr){
			if(i <= k) k++; else break;
		}
        return k;
    }
}

--------------------------------------------------------------------------------------------------------------

explanation 2 : complexity is O(log n)

https://leetcode.com/problems/kth-missing-positive-number/discuss/1004535/Python-Two-solutions-O(n)-and-O(log-n)-explained

